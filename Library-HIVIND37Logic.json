{
  "resourceType" : "Library",
  "id" : "HIVIND37Logic",
  "meta" : {
    "profile" : ["http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-shareablelibrary",
    "http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-publishablelibrary",
    "http://hl7.org/fhir/uv/cql/StructureDefinition/cql-library",
    "http://hl7.org/fhir/uv/cql/StructureDefinition/cql-module"]
  },
  "text" : {
    "status" : "generated",
    "div" : "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p class=\"res-header-id\"><b>Generated Narrative: Library HIVIND37Logic</b></p><a name=\"HIVIND37Logic\"> </a><a name=\"hcHIVIND37Logic\"> </a><a name=\"hcHIVIND37Logic-en-US\"> </a><h2>Related Artifacts</h2><table class=\"grid\"><tr><td>Depends On</td><td>Library HIC</td><td><code>http://smart.who.int/hiv/Library/HIVIndicatorCommon|0.0.1</code></td></tr><tr><td>Depends On</td><td>Library FHIRHelpers</td><td><code>http://smart.who.int/hiv/Library/FHIRHelpers|4.0.1</code></td></tr><tr><td>Depends On</td><td>Library WCom</td><td><code>http://smart.who.int/hiv/Library/WHOCommon</code></td></tr><tr><td>Depends On</td><td>Library FC</td><td><code>http://smart.who.int/hiv/Library/FHIRCommon</code></td></tr></table><h2>Contents</h2><p><code>text/cql</code></p><pre><code class=\"language-sql\">/*\n * Library: HIV.IND.37 Logic\n * Ref No: VER.1\n * Short Name: Viral suppression at labour and delivery\n *\n * Definition: % of HIV-positive pregnant women who are virally suppressed at labour and delivery\n *\n * Numerator: Number of HIV-positive pregnant women on ART during pregnancy and delivering at a facility during the reporting period who were virally suppressed (&lt;1000 copies/mL) at delivery\n * Numerator Calculation: COUNT of clients with &quot;HIV status&quot;='HIV-positive' AND &quot;Place of delivery&quot; is a 'Health facility' AND &quot;Delivery date&quot; is in the reporting period AND &quot;Date of viral load sample collection&quot; is on &quot;Delivery date&quot; AND &quot;Viral load test result&quot; LESS THAN 1000 copies/mL\n * Numerator Exclusions: \n *\n * Denominator: Number of HIV-positive pregnant women on ART during pregnancy who deliver at a facility during the reporting period and had a viral load test during delivery, or the estimated total number of pregnant women living with HIV\n * Denominator Calculation: COUNT of clients with &quot;HIV status&quot;='HIV-positive' AND &quot;Place of delivery&quot; is a 'Health facility' AND &quot;Delivery date&quot; is in the reporting period AND &quot;Date of viral load sample collection&quot; is on &quot;Delivery date&quot; |  | Alternatively: *Estimated total number of pregnant women living with HIV\n * Denominator Exclusions: \n *\n * Disaggregations:\n * • Age (&lt;15, 15–19, 20–25, 25+ years)\n * •\u00a0Timing of ART initiation (during pregnancy, on ART at first ANC visit)\n * • Cities and other administrative regions of epidemiologic importance\n * \n * Disaggregation Elements: Age | Timing of ART initiation\n *\n * Numerator and Denominator Elements:\n * Date of viral load sample collection | Delivery date | HIV status | Place of delivery | Viral load test result\n *\n * Reference: Consolidated guidelines on person-centred HIV strategic information: strengthening routine data for impact. Geneva: World Health Organization; 2022\n * \n * Data Concepts:\n *  \n * HIV.A.DE17: Age | Calculated age (number of years) of the client based on date of birth \n * HIV.B.DE115: HIV status | HIV status reported after applying the national HIV testing algorithm. No single HIV test can provide an HIV-positive diagnosis. \n * HIV.B.DE116: HIV-positive | Client is HIV-positive \n * HIV.B.DE117: HIV-negative | Client is HIV-negative \n * HIV.B.DE118: Unknown | Client has unknown HIV status \n * HIV.D.DE194: Date of viral load sample collection | Date and time when the sample was collected to test the client's HIV viral load \n * HIV.D.DE387: Viral load test result | Result from the viral load test in number of copies/mL \n * HIV.E.DE41: Timing of ART initiation | When the pregnant woman or mother initiated ART, for women living with HIV. \n * HIV.E.DE42: Already on ART at first antenatal care visit | The pregnant woman was already on antiretroviral therapy (ART) at first antenatal care visit \n * HIV.E.DE43: Newly on ART during pregnancy | The pregnant woman started ART during her pregnancy \n * HIV.E.DE44: Newly on ART during labour and delivery | The woman started ART during labour and delivery \n * HIV.E.DE46: Delivery date | Date on which the woman delivered \n * HIV.E.DE67: Place of delivery | The type of place where the woman delivered \n * HIV.E.DE68: Health facility | The woman delivered at a health facility \n * HIV.E.DE69: Home | The woman delivered at home \n * HIV.E.DE70: Other | The woman delivered at another location that is not at home or at a health facility \n * HIV.G.DE8: Date of viral load sample collection | Date and time when the sample was collected to test the client's HIV viral load \n * HIV.G.DE12: Viral load test result | Result from the viral load test in number of copies/mL\n *\n * Additional Context\n * - what it measures: This indicator measures viral suppression at the time of delivery among HIV-positive pregnant women.\n * - rationale: • Viral suppression at the time of delivery is a service quality measure at a critical point in the vertical transmission risk period. | •\u00a0Two different denominators give indicators similar to general measures of viral suppression among people living with HIV: The programme-based/service delivery denominator, that is, those on ART, delivering in a facility and having a viral load test, measures the third &quot;95&quot; target. The population-based denominator, that is, viral load among all estimated pregnant women living with HIV, regardless of ART status or ANC/facility attendance, measures population viral load suppression (of pregnant women living with HIV).\n * - method: For the numerator:  | Patient monitoring tools/EMRs (for example, PMTCT registers, patient records) |  | For the denominator: | •\u00a0Population-based denominator: modelling-based estimates (for example, Spectrum AIM) | •\u00a0Programme-based/service delivery denominator: programme records, labour and delivery registers/EMRs | Note: This indicator should be interpreted with consideration of the VL testing coverage of pregnant women living with HIV at delivery. |  | The recommended reporting period is 12 months.\n * \n * Suggested Scoring Method: proportion | http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/proportion-measure-cqfm\n */\n\nlibrary HIVIND37Logic\n\n// Included Libraries\nusing FHIR version '4.0.1'\n\ninclude HIVIndicatorCommon version '0.0.1' called HIC\ninclude FHIRHelpers version '4.0.1'\ninclude WHOCommon called WCom\ninclude FHIRCommon called FC\n\n// Indicator Definition\n</code></pre><p><code>Content not shown - (</code><code>application/elm+xml</code>, size = 8Kb )</p></div>"
  },
  "extension" : [{
    "url" : "http://hl7.org/fhir/StructureDefinition/cqf-knowledgeCapability",
    "valueCode" : "computable"
  }],
  "url" : "http://smart.who.int/HIV/Library/HIVIND37Logic",
  "version" : "0.1.0",
  "name" : "HIVIND37Logic",
  "title" : "HIV.IND.37 Logic",
  "status" : "draft",
  "experimental" : true,
  "type" : {
    "coding" : [{
      "system" : "http://terminology.hl7.org/CodeSystem/library-type",
      "code" : "logic-library"
    }]
  },
  "date" : "2024-07-01T19:19:54+00:00",
  "publisher" : "WHO",
  "contact" : [{
    "name" : "WHO",
    "telecom" : [{
      "system" : "url",
      "value" : "http://who.int"
    }]
  }],
  "description" : "% of HIV-positive pregnant women who are virally suppressed at labour and delivery",
  "relatedArtifact" : [{
    "type" : "depends-on",
    "display" : "Library HIC",
    "resource" : "http://smart.who.int/hiv/Library/HIVIndicatorCommon|0.0.1"
  },
  {
    "type" : "depends-on",
    "display" : "Library FHIRHelpers",
    "resource" : "http://smart.who.int/hiv/Library/FHIRHelpers|4.0.1"
  },
  {
    "type" : "depends-on",
    "display" : "Library WCom",
    "resource" : "http://smart.who.int/hiv/Library/WHOCommon"
  },
  {
    "type" : "depends-on",
    "display" : "Library FC",
    "resource" : "http://smart.who.int/hiv/Library/FHIRCommon"
  }],
  "content" : [{
    "contentType" : "text/cql",
    "data" : "LyoKICogTGlicmFyeTogSElWLklORC4zNyBMb2dpYwogKiBSZWYgTm86IFZFUi4xCiAqIFNob3J0IE5hbWU6IFZpcmFsIHN1cHByZXNzaW9uIGF0IGxhYm91ciBhbmQgZGVsaXZlcnkKICoKICogRGVmaW5pdGlvbjogJSBvZiBISVYtcG9zaXRpdmUgcHJlZ25hbnQgd29tZW4gd2hvIGFyZSB2aXJhbGx5IHN1cHByZXNzZWQgYXQgbGFib3VyIGFuZCBkZWxpdmVyeQogKgogKiBOdW1lcmF0b3I6IE51bWJlciBvZiBISVYtcG9zaXRpdmUgcHJlZ25hbnQgd29tZW4gb24gQVJUIGR1cmluZyBwcmVnbmFuY3kgYW5kIGRlbGl2ZXJpbmcgYXQgYSBmYWNpbGl0eSBkdXJpbmcgdGhlIHJlcG9ydGluZyBwZXJpb2Qgd2hvIHdlcmUgdmlyYWxseSBzdXBwcmVzc2VkICg8MTAwMCBjb3BpZXMvbUwpIGF0IGRlbGl2ZXJ5CiAqIE51bWVyYXRvciBDYWxjdWxhdGlvbjogQ09VTlQgb2YgY2xpZW50cyB3aXRoICJISVYgc3RhdHVzIj0nSElWLXBvc2l0aXZlJyBBTkQgIlBsYWNlIG9mIGRlbGl2ZXJ5IiBpcyBhICdIZWFsdGggZmFjaWxpdHknIEFORCAiRGVsaXZlcnkgZGF0ZSIgaXMgaW4gdGhlIHJlcG9ydGluZyBwZXJpb2QgQU5EICJEYXRlIG9mIHZpcmFsIGxvYWQgc2FtcGxlIGNvbGxlY3Rpb24iIGlzIG9uICJEZWxpdmVyeSBkYXRlIiBBTkQgIlZpcmFsIGxvYWQgdGVzdCByZXN1bHQiIExFU1MgVEhBTiAxMDAwIGNvcGllcy9tTAogKiBOdW1lcmF0b3IgRXhjbHVzaW9uczogCiAqCiAqIERlbm9taW5hdG9yOiBOdW1iZXIgb2YgSElWLXBvc2l0aXZlIHByZWduYW50IHdvbWVuIG9uIEFSVCBkdXJpbmcgcHJlZ25hbmN5IHdobyBkZWxpdmVyIGF0IGEgZmFjaWxpdHkgZHVyaW5nIHRoZSByZXBvcnRpbmcgcGVyaW9kIGFuZCBoYWQgYSB2aXJhbCBsb2FkIHRlc3QgZHVyaW5nIGRlbGl2ZXJ5LCBvciB0aGUgZXN0aW1hdGVkIHRvdGFsIG51bWJlciBvZiBwcmVnbmFudCB3b21lbiBsaXZpbmcgd2l0aCBISVYKICogRGVub21pbmF0b3IgQ2FsY3VsYXRpb246IENPVU5UIG9mIGNsaWVudHMgd2l0aCAiSElWIHN0YXR1cyI9J0hJVi1wb3NpdGl2ZScgQU5EICJQbGFjZSBvZiBkZWxpdmVyeSIgaXMgYSAnSGVhbHRoIGZhY2lsaXR5JyBBTkQgIkRlbGl2ZXJ5IGRhdGUiIGlzIGluIHRoZSByZXBvcnRpbmcgcGVyaW9kIEFORCAiRGF0ZSBvZiB2aXJhbCBsb2FkIHNhbXBsZSBjb2xsZWN0aW9uIiBpcyBvbiAiRGVsaXZlcnkgZGF0ZSIgfCAgfCBBbHRlcm5hdGl2ZWx5OiAqRXN0aW1hdGVkIHRvdGFsIG51bWJlciBvZiBwcmVnbmFudCB3b21lbiBsaXZpbmcgd2l0aCBISVYKICogRGVub21pbmF0b3IgRXhjbHVzaW9uczogCiAqCiAqIERpc2FnZ3JlZ2F0aW9uczoKICog4oCiIEFnZSAoPDE1LCAxNeKAkzE5LCAyMOKAkzI1LCAyNSsgeWVhcnMpCiAqIOKAosKgVGltaW5nIG9mIEFSVCBpbml0aWF0aW9uIChkdXJpbmcgcHJlZ25hbmN5LCBvbiBBUlQgYXQgZmlyc3QgQU5DIHZpc2l0KQogKiDigKIgQ2l0aWVzIGFuZCBvdGhlciBhZG1pbmlzdHJhdGl2ZSByZWdpb25zIG9mIGVwaWRlbWlvbG9naWMgaW1wb3J0YW5jZQogKiAKICogRGlzYWdncmVnYXRpb24gRWxlbWVudHM6IEFnZSB8IFRpbWluZyBvZiBBUlQgaW5pdGlhdGlvbgogKgogKiBOdW1lcmF0b3IgYW5kIERlbm9taW5hdG9yIEVsZW1lbnRzOgogKiBEYXRlIG9mIHZpcmFsIGxvYWQgc2FtcGxlIGNvbGxlY3Rpb24gfCBEZWxpdmVyeSBkYXRlIHwgSElWIHN0YXR1cyB8IFBsYWNlIG9mIGRlbGl2ZXJ5IHwgVmlyYWwgbG9hZCB0ZXN0IHJlc3VsdAogKgogKiBSZWZlcmVuY2U6IENvbnNvbGlkYXRlZCBndWlkZWxpbmVzIG9uIHBlcnNvbi1jZW50cmVkIEhJViBzdHJhdGVnaWMgaW5mb3JtYXRpb246IHN0cmVuZ3RoZW5pbmcgcm91dGluZSBkYXRhIGZvciBpbXBhY3QuIEdlbmV2YTogV29ybGQgSGVhbHRoIE9yZ2FuaXphdGlvbjsgMjAyMgogKiAKICogRGF0YSBDb25jZXB0czoKICogIAogKiBISVYuQS5ERTE3OiBBZ2UgfCBDYWxjdWxhdGVkIGFnZSAobnVtYmVyIG9mIHllYXJzKSBvZiB0aGUgY2xpZW50IGJhc2VkIG9uIGRhdGUgb2YgYmlydGggCiAqIEhJVi5CLkRFMTE1OiBISVYgc3RhdHVzIHwgSElWIHN0YXR1cyByZXBvcnRlZCBhZnRlciBhcHBseWluZyB0aGUgbmF0aW9uYWwgSElWIHRlc3RpbmcgYWxnb3JpdGhtLiBObyBzaW5nbGUgSElWIHRlc3QgY2FuIHByb3ZpZGUgYW4gSElWLXBvc2l0aXZlIGRpYWdub3Npcy4gCiAqIEhJVi5CLkRFMTE2OiBISVYtcG9zaXRpdmUgfCBDbGllbnQgaXMgSElWLXBvc2l0aXZlIAogKiBISVYuQi5ERTExNzogSElWLW5lZ2F0aXZlIHwgQ2xpZW50IGlzIEhJVi1uZWdhdGl2ZSAKICogSElWLkIuREUxMTg6IFVua25vd24gfCBDbGllbnQgaGFzIHVua25vd24gSElWIHN0YXR1cyAKICogSElWLkQuREUxOTQ6IERhdGUgb2YgdmlyYWwgbG9hZCBzYW1wbGUgY29sbGVjdGlvbiB8IERhdGUgYW5kIHRpbWUgd2hlbiB0aGUgc2FtcGxlIHdhcyBjb2xsZWN0ZWQgdG8gdGVzdCB0aGUgY2xpZW50J3MgSElWIHZpcmFsIGxvYWQgCiAqIEhJVi5ELkRFMzg3OiBWaXJhbCBsb2FkIHRlc3QgcmVzdWx0IHwgUmVzdWx0IGZyb20gdGhlIHZpcmFsIGxvYWQgdGVzdCBpbiBudW1iZXIgb2YgY29waWVzL21MIAogKiBISVYuRS5ERTQxOiBUaW1pbmcgb2YgQVJUIGluaXRpYXRpb24gfCBXaGVuIHRoZSBwcmVnbmFudCB3b21hbiBvciBtb3RoZXIgaW5pdGlhdGVkIEFSVCwgZm9yIHdvbWVuIGxpdmluZyB3aXRoIEhJVi4gCiAqIEhJVi5FLkRFNDI6IEFscmVhZHkgb24gQVJUIGF0IGZpcnN0IGFudGVuYXRhbCBjYXJlIHZpc2l0IHwgVGhlIHByZWduYW50IHdvbWFuIHdhcyBhbHJlYWR5IG9uIGFudGlyZXRyb3ZpcmFsIHRoZXJhcHkgKEFSVCkgYXQgZmlyc3QgYW50ZW5hdGFsIGNhcmUgdmlzaXQgCiAqIEhJVi5FLkRFNDM6IE5ld2x5IG9uIEFSVCBkdXJpbmcgcHJlZ25hbmN5IHwgVGhlIHByZWduYW50IHdvbWFuIHN0YXJ0ZWQgQVJUIGR1cmluZyBoZXIgcHJlZ25hbmN5IAogKiBISVYuRS5ERTQ0OiBOZXdseSBvbiBBUlQgZHVyaW5nIGxhYm91ciBhbmQgZGVsaXZlcnkgfCBUaGUgd29tYW4gc3RhcnRlZCBBUlQgZHVyaW5nIGxhYm91ciBhbmQgZGVsaXZlcnkgCiAqIEhJVi5FLkRFNDY6IERlbGl2ZXJ5IGRhdGUgfCBEYXRlIG9uIHdoaWNoIHRoZSB3b21hbiBkZWxpdmVyZWQgCiAqIEhJVi5FLkRFNjc6IFBsYWNlIG9mIGRlbGl2ZXJ5IHwgVGhlIHR5cGUgb2YgcGxhY2Ugd2hlcmUgdGhlIHdvbWFuIGRlbGl2ZXJlZCAKICogSElWLkUuREU2ODogSGVhbHRoIGZhY2lsaXR5IHwgVGhlIHdvbWFuIGRlbGl2ZXJlZCBhdCBhIGhlYWx0aCBmYWNpbGl0eSAKICogSElWLkUuREU2OTogSG9tZSB8IFRoZSB3b21hbiBkZWxpdmVyZWQgYXQgaG9tZSAKICogSElWLkUuREU3MDogT3RoZXIgfCBUaGUgd29tYW4gZGVsaXZlcmVkIGF0IGFub3RoZXIgbG9jYXRpb24gdGhhdCBpcyBub3QgYXQgaG9tZSBvciBhdCBhIGhlYWx0aCBmYWNpbGl0eSAKICogSElWLkcuREU4OiBEYXRlIG9mIHZpcmFsIGxvYWQgc2FtcGxlIGNvbGxlY3Rpb24gfCBEYXRlIGFuZCB0aW1lIHdoZW4gdGhlIHNhbXBsZSB3YXMgY29sbGVjdGVkIHRvIHRlc3QgdGhlIGNsaWVudCdzIEhJViB2aXJhbCBsb2FkIAogKiBISVYuRy5ERTEyOiBWaXJhbCBsb2FkIHRlc3QgcmVzdWx0IHwgUmVzdWx0IGZyb20gdGhlIHZpcmFsIGxvYWQgdGVzdCBpbiBudW1iZXIgb2YgY29waWVzL21MCiAqCiAqIEFkZGl0aW9uYWwgQ29udGV4dAogKiAtIHdoYXQgaXQgbWVhc3VyZXM6IFRoaXMgaW5kaWNhdG9yIG1lYXN1cmVzIHZpcmFsIHN1cHByZXNzaW9uIGF0IHRoZSB0aW1lIG9mIGRlbGl2ZXJ5IGFtb25nIEhJVi1wb3NpdGl2ZSBwcmVnbmFudCB3b21lbi4KICogLSByYXRpb25hbGU6IOKAoiBWaXJhbCBzdXBwcmVzc2lvbiBhdCB0aGUgdGltZSBvZiBkZWxpdmVyeSBpcyBhIHNlcnZpY2UgcXVhbGl0eSBtZWFzdXJlIGF0IGEgY3JpdGljYWwgcG9pbnQgaW4gdGhlIHZlcnRpY2FsIHRyYW5zbWlzc2lvbiByaXNrIHBlcmlvZC4gfCDigKLCoFR3byBkaWZmZXJlbnQgZGVub21pbmF0b3JzIGdpdmUgaW5kaWNhdG9ycyBzaW1pbGFyIHRvIGdlbmVyYWwgbWVhc3VyZXMgb2YgdmlyYWwgc3VwcHJlc3Npb24gYW1vbmcgcGVvcGxlIGxpdmluZyB3aXRoIEhJVjogVGhlIHByb2dyYW1tZS1iYXNlZC9zZXJ2aWNlIGRlbGl2ZXJ5IGRlbm9taW5hdG9yLCB0aGF0IGlzLCB0aG9zZSBvbiBBUlQsIGRlbGl2ZXJpbmcgaW4gYSBmYWNpbGl0eSBhbmQgaGF2aW5nIGEgdmlyYWwgbG9hZCB0ZXN0LCBtZWFzdXJlcyB0aGUgdGhpcmQgIjk1IiB0YXJnZXQuIFRoZSBwb3B1bGF0aW9uLWJhc2VkIGRlbm9taW5hdG9yLCB0aGF0IGlzLCB2aXJhbCBsb2FkIGFtb25nIGFsbCBlc3RpbWF0ZWQgcHJlZ25hbnQgd29tZW4gbGl2aW5nIHdpdGggSElWLCByZWdhcmRsZXNzIG9mIEFSVCBzdGF0dXMgb3IgQU5DL2ZhY2lsaXR5IGF0dGVuZGFuY2UsIG1lYXN1cmVzIHBvcHVsYXRpb24gdmlyYWwgbG9hZCBzdXBwcmVzc2lvbiAob2YgcHJlZ25hbnQgd29tZW4gbGl2aW5nIHdpdGggSElWKS4KICogLSBtZXRob2Q6IEZvciB0aGUgbnVtZXJhdG9yOiAgfCBQYXRpZW50IG1vbml0b3JpbmcgdG9vbHMvRU1ScyAoZm9yIGV4YW1wbGUsIFBNVENUIHJlZ2lzdGVycywgcGF0aWVudCByZWNvcmRzKSB8ICB8IEZvciB0aGUgZGVub21pbmF0b3I6IHwg4oCiwqBQb3B1bGF0aW9uLWJhc2VkIGRlbm9taW5hdG9yOiBtb2RlbGxpbmctYmFzZWQgZXN0aW1hdGVzIChmb3IgZXhhbXBsZSwgU3BlY3RydW0gQUlNKSB8IOKAosKgUHJvZ3JhbW1lLWJhc2VkL3NlcnZpY2UgZGVsaXZlcnkgZGVub21pbmF0b3I6IHByb2dyYW1tZSByZWNvcmRzLCBsYWJvdXIgYW5kIGRlbGl2ZXJ5IHJlZ2lzdGVycy9FTVJzIHwgTm90ZTogVGhpcyBpbmRpY2F0b3Igc2hvdWxkIGJlIGludGVycHJldGVkIHdpdGggY29uc2lkZXJhdGlvbiBvZiB0aGUgVkwgdGVzdGluZyBjb3ZlcmFnZSBvZiBwcmVnbmFudCB3b21lbiBsaXZpbmcgd2l0aCBISVYgYXQgZGVsaXZlcnkuIHwgIHwgVGhlIHJlY29tbWVuZGVkIHJlcG9ydGluZyBwZXJpb2QgaXMgMTIgbW9udGhzLgogKiAKICogU3VnZ2VzdGVkIFNjb3JpbmcgTWV0aG9kOiBwcm9wb3J0aW9uIHwgaHR0cDovL2hsNy5vcmcvZmhpci91cy9jcWZtZWFzdXJlcy9TdHJ1Y3R1cmVEZWZpbml0aW9uL3Byb3BvcnRpb24tbWVhc3VyZS1jcWZtCiAqLwoKbGlicmFyeSBISVZJTkQzN0xvZ2ljCgovLyBJbmNsdWRlZCBMaWJyYXJpZXMKdXNpbmcgRkhJUiB2ZXJzaW9uICc0LjAuMScKCmluY2x1ZGUgSElWSW5kaWNhdG9yQ29tbW9uIHZlcnNpb24gJzAuMC4xJyBjYWxsZWQgSElDCmluY2x1ZGUgRkhJUkhlbHBlcnMgdmVyc2lvbiAnNC4wLjEnCmluY2x1ZGUgV0hPQ29tbW9uIGNhbGxlZCBXQ29tCmluY2x1ZGUgRkhJUkNvbW1vbiBjYWxsZWQgRkMKCi8vIEluZGljYXRvciBEZWZpbml0aW9uCg=="
  },
  {
    "contentType" : "application/elm+xml",
    "data" : ""
  }]
}